package com.topcoder.problems.round167;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

//http://community.topcoder.com/stat?c=problem_statement&pm=1095&rd=4700
public class Rooms
{
    Map<Integer, Map<String, List<Integer>>> map =
            new HashMap<Integer, Map<String, List<Integer>>>();

    public int[] finalRooms(String[] rooms, String doors, int start)
    {
        for ( int i = 0 ; i < rooms.length ; i++ )
        {
            String str = rooms[i];
            String[] arr = str.split("\\s+");
            Map<String, List<Integer>> map
              = new HashMap<String, List<Integer>>();
            for ( int j = 0 ; j < arr.length ; j++ )
            {
                String str1 = arr[j];
                String[] arr1 = str1.split(":");
                String door = arr1[0];
                String[] arr2 = arr1[1].split(",");
                List<Integer> list = new ArrayList<Integer>();
                for ( String str2 : arr2 )
                {
                    list.add(Integer.parseInt(str2));
                }
                map.put(door, list);
            }
            this.map.put(i, map);
        }
        
        Set<Integer> inputSet= new HashSet<Integer>();
        inputSet.add(start);
        for ( int i = 0 ; i < doors.length() ; i++)
        {
            String currentOpenDoor = ""+doors.charAt(i);
            Set<Integer> set = new TreeSet<Integer>();
            for (Integer s : inputSet)
            {
                Map<String, List<Integer>> map1 = map.get(s);
                List<Integer> nextDoors = map1.get(currentOpenDoor);
                set.addAll(nextDoors== null ? new HashSet<Integer>() : nextDoors);
            }
            inputSet = set;
        }
        int[] result = inputSet.stream().mapToInt(e -> e).toArray();
        return result;
    }
    
    
    public static void main(String[] args)
    {
        String[] arr = {"A:1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19", "A:2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20", "A:3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20", "A:4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21", "A:5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22", "A:6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22", "A:7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23", "A:8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24", "A:9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24", "A:10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25", "A:11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26", "A:12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27", "A:13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28", "A:14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29", "A:15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30", "A:16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31", "A:17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32", "A:18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33", "A:19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34", "A:20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35", "A:21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36", "A:22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37", "A:23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38", "A:24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39", "A:25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40", "A:26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41", "A:27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42", "A:28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43", "A:29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44", "A:30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45", "A:31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46", "A:32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47", "A:33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48", "A:34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49", "A:35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1", "A:36,37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,2", "A:37,38,39,40,41,42,43,44,45,46,47,48,49,0,1,2,3,4", "A:38,39,40,41,42,43,44,45,46,47,48,49,0,1,2,3,4,5", "A:39,40,41,42,43,44,45,46,47,48,49,0,1,2,3,4,5,6,7", "A:40,41,42,43,44,45,46,47,48,49,0,1,2,3,4,5,6,7,8", "A:41,42,43,44,45,46,47,48,49,0,1,2,3,4,5,6,7,8,9", "A:42,43,44,45,46,47,48,49,0,1,2,3,4,5,6,7,8,9,10", "A:43,44,45,46,47,48,49,0,1,2,3,4,5,6,7,8,9,10,11", "A:44,45,46,47,48,49,0,1,2,3,4,5,6,7,8,9,10,11,12", "A:45,46,47,48,49,0,1,2,3,4,5,6,7,8,9,10,11,12,13", "A:46,47,48,49,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14", "A:47,48,49,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15", "A:48,49,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16", "A:49,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17", "A:0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18"};
        String doors = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
        int start = 0;
        int[] result = new Rooms().finalRooms(arr, doors, start);
        for ( int i = 0; i < result.length ; i++)
        {
            System.out.println(result[i]);
        }
    }

}
